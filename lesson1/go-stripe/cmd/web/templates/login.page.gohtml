{{template "base" .}}

{{define "title"}}
    Login
{{end}}

{{define "content"}}
    <form action="" method="post"
        name="charge_form" id="charge_form"
        class="d-block needs-validation charge-form"
        autocomplete="off" novalidate="">

        <h2 class="mt-3 text-center mb-3">Login</h2>
        <hr>

        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="email"
                required="" autocomplete="email-new">
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="password" name="password" required="" autocomplete="password-new">
        </div>
        <hr>

        <a href="javascript:void(0)" class="btn btn-primary" onclick="val()">Login</a>

    </form>
{{end}}

{{define "js"}}
<script>
    function val() {
        let card;
        let stripe;
        const cardMessages = document.getElementById("card-messages");
        const payButton = document.getElementById("pay-button");
        const processing = document.getElementById("processing-payment");

        stripe = Stripe("pk_test_51RAiiJQIYevZnwnf6k5vtRV78yxyQfnTaGfRJ4C6aShdwPF0jYyZaf33WivHo2XMW2ODZUSGGbya0qZ58KL2oYYm00fWUTFAD9");
        {{/* stripe = Stripe({{.StripePublishableKey}}); */}}

        function hidePayButton() {
            payButton.classList.add("d-none");
            processing.classList.remove("d-none");
        }

        function showPayButtons() {
            payButton.classList.remove("d-none");
            processing.classList.add("d-none");
        }

        function showCardError(msg) {
            cardMessages.classList.add("alert-danger");
            cardMessages.classList.remove("alert-success");
            cardMessages.classList.remove("d-none");
            cardMessages.innerText = msg;
        }

        function showCardSuccess() {
            cardMessages.classList.remove("alert-danger");
            cardMessages.classList.add("alert-success");
            cardMessages.classList.remove("d-none");
            cardMessages.innerText = "Transaction successful";
        }

        function val() {
            let form = document.getElementById("charge_form");
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return;
            }
            form.classList.add("was-validated");
            hidePayButton();

            let amountToCharge = document.getElementById("amount").value;
            
            let payload = {
                amount: amountToCharge,
                currency: 'cad',
            }

            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload),
            }

            {{/* fetch("http://localhost:4001/api/payment-intent", requestOptions) */}}
            fetch("{{.API}}/api/payment-intent", requestOptions)
                .then(response => response.text())
                .then(response => {
                    
                })
        }
    }
</script>
{{end}}